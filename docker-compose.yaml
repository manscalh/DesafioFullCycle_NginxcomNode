version: '3'

services:

  app:
    build: 
      context: node
    container_name: app
    entrypoint: dockerize -wait tcp://db:3306 -timeout 20s docker-entrypoint.sh
    command: node index.js
    networks:
      - node-network
    volumes:
      - ./node:/usr/src/app
      - /usr/src/app/node_modules
    tty: true
    ports:
      - "3000:3000"
    depends_on:
      - db

  db:
    image: mysql:5.7
    command: --innodb-use-native-aio=0
    container_name: db
    restart: always
    tty: true
    volumes:
      - ./mysql:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - MYSQL_DATABASE=nodedb
      - MYSQL_ROOT_PASSWORD=root
    networks:
      - node-network


  nginx:
    build: 
      context: ./nginx
      dockerfile: Dockerfile.prod
    container_name: nginx
    networks:
      - node-network
    ports:
      - "8080:80"
    depends_on:
      - db
      - app


networks:
  node-network:
    driver: bridge

# docker rm $(docker ps -a -q) -f
# docker-compose up
# Se n√£o quiser travar o terminal: docker-compose up -d 
# docker-compose ps
# docker-compose down
# docker-compose up -d --build

#docker exec -it app bash
#docker exec -it db bash
#mysql -uroot -p

#docker logs app
#docker logs db